{"version":3,"file":"static/js/402.e46fd785.chunk.js","mappings":"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","sources":["components/ReadyStylesCatalog/ReadyStylesCatalog.jsx","pages/ReadyStyles.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { CatalogSort } from '../Catalog/CatalogSort/CatalogSort';\nimport { CatalogFilter } from '../Catalog/CatalogFilter/CatalogFilter';\nimport { Benefits } from '../Catalog/Benefits/Benefits';\nimport { CatalogList } from '../Catalog/CatalogList/CatalogList';\nimport { Pagination } from 'utils/pagination';\nimport { fetchData } from 'services/APIservice';\nimport { saveToStorage, getFromStorage } from 'services/localStorService';\nimport { onLoading, onLoaded } from 'components/helpers/Loader/Loader';\nimport { onFetchError } from 'components/helpers/Messages/NotifyMessages';\n\nimport * as SC from '../Catalog/Catalog.styled';\nimport { ReactComponent as Open } from 'images/svg/open.svg';\nimport { ReactComponent as Close } from 'images/svg/icon_close.svg';\nimport { Headline } from 'components/baseStyles/CommonStyle.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nlet perPage = 12;\n\nexport const ReadyStylesCatalog = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filterState, setFilterState] = useState({});\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [totalPage, setTotalPage] = useState(0);\n  const [page, setPages] = useState(\n    getFromStorage('page') ? getFromStorage('page') : 1,\n  );\n  const { selectedLanguage, selectedCurrency } = useContext(StatusContext);\n\n  // const routeParams = useParams();\n  let initialState;\n  getFromStorage('filters')\n    ? (initialState = getFromStorage('filters'))\n    : (initialState = {\n        man_woman: [],\n        category: [],\n        maxPrice: '5000',\n        minPrice: '0',\n        product: [],\n        sizes: [],\n        page: page,\n        perPage: perPage,\n        currency: selectedCurrency,\n        selectedLanguage: selectedLanguage \n      });\n\n  const [selectedFilter, setSelectedFilter] = useState([]);\n  const [filters, setFilters] = useState(initialState);\n  const [search, setSearch] = useState('');\n  const [sort, setSort] = useState(\n    getFromStorage('sort') ? getFromStorage('sort') : '',\n  );\n  const { t } = useTranslation();\n\n  const setPage = toPage => {\n    searchParams.set('page', toPage);\n    saveToStorage('page', toPage);\n    setPages(toPage);\n    // setSearchParams(searchParams);\n  };\n\n  // get selected filter elements after refresh\n  const handleActiveLabel = key => {\n    const filtersFromLS = getFromStorage('filters');\n    const selectedFilters = filtersFromLS[key];\n    if (selectedFilters) {\n      selectedFilters.forEach(item => {\n        const checkboxes = document.querySelectorAll(\n          `label[data-key=\"${item}\"]`,\n        );\n        checkboxes?.forEach(checkbox => checkbox.classList.add('active_label'));\n      });\n    }\n  };\n\n  const getActiveLabel = () => {\n    handleActiveLabel('man_woman');\n    handleActiveLabel('category');\n    handleActiveLabel('product');\n    handleActiveLabel('sizes');\n    // handleActiveLabel('minPrice');\n    // handleActiveLabel('maxPrice');\n  };\n\n  // =================================================>\n  // useEffect(() => setParams(), []);\n\n  useEffect(() => {\n    const checkFilter = getFromStorage('filters');\n    const param = {};\n    searchParams.getAll('man_woman') &&\n    searchParams.getAll('man_woman') != 'null' &&\n    searchParams.getAll('man_woman') !== undefined &&\n    searchParams.getAll('man_woman') !== ''\n      ? (param.man_woman = searchParams.get('man_woman'))\n      : checkFilter.man_woman\n      ? (param.man_woman = checkFilter.man_woman)\n      : (param.man_woman = []);\n    searchParams.getAll('category') &&\n    searchParams.getAll('category') != 'null' &&\n    searchParams.getAll('category') !== undefined &&\n    searchParams.getAll('category') !== ''\n      ? (param.category = searchParams.get('category'))\n      : checkFilter?.category\n      ? (param.category = checkFilter?.category)\n      : (param.category = []);\n    searchParams.getAll('product') &&\n    searchParams.getAll('product') != 'null' &&\n    searchParams.getAll('product') !== undefined &&\n    searchParams.getAll('product') !== ''\n      ? (param.product = searchParams.get('product'))\n      : checkFilter?.product\n      ? (param.product = checkFilter?.product)\n      : (param.product = []);\n    searchParams.getAll('sizes') &&\n    searchParams.getAll('sizes') != 'null' &&\n    searchParams.getAll('sizes') !== undefined &&\n    searchParams.getAll('sizes') !== ''\n      ? (param.sizes = searchParams.get('sizes'))\n      : checkFilter?.sizes\n      ? (param.sizes = checkFilter?.sizes)\n      : (param.sizes = []);\n    searchParams.get('minPrice')\n      ? (param.minPrice = searchParams.get('minPrice'))\n      : checkFilter?.minPrice\n      ? (param.minPrice = checkFilter?.minPrice)\n      : (param.minPrice = '');\n    searchParams.get('maxPrice')\n      ? (param.maxPrice = searchParams.get('maxPrice'))\n      : checkFilter?.maxPrice\n      ? (param.maxPrice = checkFilter?.maxPrice)\n      : (param.maxPrice = '');\n    searchParams.get('page')\n      ? (param.page = searchParams.get('page'))\n      : getFromStorage('page')\n      ? (param.page = getFromStorage('page'))\n      : (param.page = page);\n    searchParams.get('perPage')\n      ? (param.perPage = searchParams.get('perPage'))\n      : (param.perPage = perPage);\n    searchParams.get('currency')\n      ? (param.currency = searchParams.get('currency'))\n      : (param.currency = selectedCurrency);\n    searchParams.get('selectedLanguage')\n      ? (param.selectedLanguage = searchParams.get('selectedLanguage'))\n      : (param.selectedLanguage = selectedLanguage);\n    searchParams.get('sort')\n      ? (param.sort = searchParams.get('sort'))\n      : (param.sort = '');\n    setSearchParams(param);\n  }, []);\n\n  useEffect(() => {\n    setParams();\n    async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(\n          `/styles`,\n        );\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setProducts(data);\n        setTotalPage(Math.ceil(data.total / perPage));\n        if ((data.total + perPage) / (perPage * page) < 1) {\n          setPage(1);\n        }\n        getSelectedFilter();\n        getActiveLabel();\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    // if (searchParams.size > 0) {\n    //   getData();\n    // }\n    getData();\n  }, [\n    t,\n    page,\n    perPage,\n    // sort,\n    searchParams,\n  ]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/category`);\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setFilterState(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  const [showSort, setShowSort] = useState(false);\n  const toggleSort = () => {\n    setShowSort(state => !state);\n    setShowFilter(false);\n  };\n\n  const [showFilter, setShowFilter] = useState(false);\n  const toggleFilter = () => {\n    setShowFilter(state => !state);\n    setShowSort(false);\n  };\n\n  const handleClick = () => {\n    setShowSort(false);\n    setShowFilter(false);\n  };\n\n  // const removeLocalStor = () => {\n  //   // removeItem('category');\n  //   removeItem('filters');\n  // };\n\n  const getSelectedFilter = () => {\n    const LS = getFromStorage('filters');\n    setSelectedFilter([\n      ...LS.category,\n      ...LS.man_woman,\n      ...LS.product,\n      ...LS.sizes,\n    ]);\n    // console.log('selectedFilter', selectedFilter);\n  };\n\n  const removeSelectedFilter = e => {\n    const deletedFilter = e.currentTarget.dataset.key;\n    const newFilters = selectedFilter.filter(item => item !== deletedFilter);\n    setSelectedFilter(newFilters);\n\n    const LS = getFromStorage('filters');\n    const LSentries = Object.entries(LS);\n\n    for (const [key, value] of LSentries) {\n      const arr = [key, value];\n\n      if (arr[1].length !== 0) {\n        if (Array.isArray(arr[1])) {\n          const index = arr[1].findIndex(item => item === deletedFilter);\n          if (index > -1) {\n            arr[1].splice(index, 1);\n            saveToStorage('filters', { ...LS, [arr[0]]: arr[1] });\n            setFilters(prevState => ({ ...prevState, [arr[0]]: arr[1] }));\n            setParams();\n          }\n        }\n        if (!Array.isArray(arr[1])) {\n          if (arr[0] == 'minPrice') {\n            saveToStorage('filters', { ...LS, ['minPrice']: '0' });\n            setFilters(prevState => ({ ...prevState, ['minPrice']: '0' }));\n            setParams();\n          }\n          if (arr[0] == 'maxPrice') {\n            saveToStorage('filters', { ...LS, ['maxPrice']: '5000' });\n            setFilters(prevState => ({ ...prevState, ['maxPrice']: '5000' }));\n            setParams();\n          }\n        }\n      }\n    }\n\n    const checkboxes = document.querySelectorAll(\n      `label[data-key=\"${deletedFilter}\"]`,\n    );\n    checkboxes?.forEach(checkbox => checkbox.classList.remove('active_label'));\n  };\n\n  const setParams = () => {\n    let params = Object.fromEntries(searchParams);\n\n    if (filters.man_woman !== '') {\n      params.man_woman = filters.man_woman;\n    }\n    if (filters.category !== '') {\n      params.category = filters.category;\n    }\n    if (filters.product !== '') {\n      params.product = filters.product;\n    }\n    if (filters.sizes !== '') {\n      params.sizes = filters.sizes;\n    }\n    if (filters.minPrice !== '') {\n      params.minPrice = filters.minPrice;\n    }\n    if (filters.maxPrice !== '') {\n      params.maxPrice = filters.maxPrice;\n    }\n    if (filters.page !== '') {\n      params.page = page;\n    }\n    if (filters.perPage !== '') {\n      params.perPage = perPage;\n    }\n    if (filters.currency !== '') {\n      params.currency = selectedCurrency;\n    }\n    if (filters.sort !== '') {\n      params.sort = sort;\n    }\n    if (filters.selectedLanguage !== '') {\n      params.selectedLanguage = selectedLanguage;\n    }\n    setSearchParams(params);\n  };\n  console.log('searchParams', searchParams.size);\n  return (\n    <SC.CatalogContainer>\n      <SC.CatalogSection>\n        <SC.CatalogTitleWrapper>\n          <SC.HeadlineShop $primary>{t('Shop')}</SC.HeadlineShop>\n          <SC.Heading>\n            <SC.HeadingBtnBox>\n              <SC.SortBox>\n                <SC.Accord onClick={toggleSort}>\n                  <span>{t('SORT BY')}</span>\n                  <SC.IconBtn\n                    type=\"button\"\n                    aria-label=\"switch to open sort list\"\n                    aria-expanded=\"false\"\n                  >\n                    <Open />\n                  </SC.IconBtn>\n                </SC.Accord>\n                {showSort && <CatalogSort sort={sort} setSort={setSort} />}\n              </SC.SortBox>\n            </SC.HeadingBtnBox>\n            <SC.FiltersBox>\n              <SC.Accord onClick={toggleFilter}>\n                <span>{t('FILTER BY')}</span>\n                <SC.IconBtn\n                  type=\"button\"\n                  aria-label=\"switch to open filter list\"\n                  aria-expanded=\"false\"\n                >\n                  <Open />\n                </SC.IconBtn>\n              </SC.Accord>\n              {showFilter && (\n                <SC.FiltersWrapper>\n                  <CatalogFilter\n                    filterState={filterState}\n                    setParams={setParams}\n                    filters={filters}\n                    setFilters={setFilters}\n                    setSearchParams={setSearchParams}\n                    searchParams={searchParams}\n                    selectedLanguage={selectedLanguage}\n                  />\n                </SC.FiltersWrapper>\n              )}\n            </SC.FiltersBox>\n          </SC.Heading>\n        </SC.CatalogTitleWrapper>\n        {search && (\n          <SC.SearchResults>\n            <span>{t('Search results')}:</span> {search}\n            <Close\n              data-key=\"search\"\n              onClick={() => {\n                setSearch('');\n                searchParams.delete('search');\n              }}\n            />\n          </SC.SearchResults>\n        )}\n        <SC.SelectedFilters>\n          {selectedFilter &&\n            selectedFilter.map((filter, i) => {\n              return (\n                <label key={i} data-key={filter}>\n                  <span>{filter}</span>\n                  <Close\n                    data-key={filter}\n                    onClick={e => removeSelectedFilter(e)}\n                  />\n                </label>\n              );\n            })}\n        </SC.SelectedFilters>\n        <SC.GridContainer onClick={handleClick}>\n          <SC.FiltersContainer>\n            <CatalogFilter\n              filterState={filterState}\n              setParams={setParams}\n              filters={filters}\n              setFilters={setFilters}\n              setSearchParams={setSearchParams}\n              selectedLanguage={selectedLanguage}\n            />\n          </SC.FiltersContainer>\n          <SC.GridWrapper>\n            {isLoading ? onLoading() : onLoaded()}\n            {error && onFetchError(t('Whoops, something went wrong'))}\n            {products.length > 0 && !error && (\n              <CatalogList products={products} />\n            )}\n            <Pagination\n              totalPage={totalPage}\n              changePage={setPage}\n              page={page}\n            />\n            {products.length === 0 && !isLoading && !error && (\n              <>\n                <Headline style={{ textAlign: 'center' }}>\n                  {t('Nothing found for these parameters...')}\n                </Headline>\n                <Headline style={{ textAlign: 'center' }}>\n                  {t('Please, try to clear filter')}\n                </Headline>\n              </>\n            )}\n          </SC.GridWrapper>\n        </SC.GridContainer>\n      </SC.CatalogSection>\n      <Benefits />\n    </SC.CatalogContainer>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { cleanHeaderBottom } from 'redux/header_bottom/operation';\nimport { ReadyStylesCatalog } from 'components/ReadyStylesCatalog/ReadyStylesCatalog';\n\n\nconst ReadyStyles = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  useEffect(() => {\n    dispatch(cleanHeaderBottom());\n  }, [location]);\n\n  return (\n    <>\n      <SEO\n        title=\"Discounts\"\n        description_ua=\"Найкращий магазин найкращого одягу та взуття, аксесуарів тощо в Європі. Відомі бренди, найкраща якість, швидка доставка. Ви будете задоволені продуктом і обслуговуванням. Від першого продажу до повного масштабу та все між ними. Почніть сьогодні! Швидко та легко. Все, що вам потрібно. Запобігання шахрайству. Безпечний кошик для покупок.\"\n        keywords_ua=\"quillis, Quillis, Quil, quil, магазин, найкраще, одяг, взуття, аксесуари, бренд, якість, доставка, швидко, задоволений, товари, послуга, Дивовижно, Оголошення, Угода, Виклик, Порівняйте, Легко, Поспішайте, Поліпшення, Представляємо, Магія, Зараз, Пропозиція, Швидкий, Чудовий, Революційний, Сенсаційний, Приголомшливий, Раптово, Розшук, Випадковий, Одяг, Офіційний, Одяг, Спортивний одяг, Верхній одяг, Одяг для активного відпочинку, Одяг для сну, Купальники, Етнічний, Одяг, Для вагітних, Бізнес, Уніформа, Вечірній одяг , Вінтажний одяг, Дизайнер, Етикетка, Аксесуари, Взуття, Робочий одяг, Рюкзаки, Пояси, сумки, Наплічні сумки, Кепки, панські, Шкарпетки, Ремені, Шкарпетки, окуляри, рукавички, наклейки, гаманці, Зимові шапки, шарфи, шапки, Шарфи, рукавички, Верхній одяг, Поло, Футболки, Боді, Нижня білизна, Худі, світшоти, светри, Куртки, Сорочки, Толстовка, толстовки, Штани, Спортивні костюми, Топи, сукні, спідниці, костюми, Шорти, літні комплекти, купальники, кросівки, Кеди , Зимове взуття\"\n        description=\"The best store of the best clothes and shoes, accessories, etc in Europe. Famous brands, best quality, fast delivery. You will be satisfied with the product and service. From first sale to full scale, and everything in between. Get started today! Quick & Easy. Everything You Need. Fraud Prevention. Secure Shopping Cart.\"\n        keywords=\"quillis, Quillis, Quil, quil, store, best, clothes, shoes, accessories, brand, quality, delivery, fast, satisfied, goods, service, Amazing, Announcing, Bargain, Challenge, Compare, Easy, Hurry, Improvement, Introducing, Magic, Now, Offer, Quick, Remarkable, Revolutionary, Sensational, Startling, Suddenly, Wanted, Casual, Wear, Formal, Attire,  Sportswear, Outerwear, Activewear, Sleepwear, Swimwear,  Ethnic, Clothing, Maternity, Business, Uniform, Evening Wear, Vintage Clothing,  Designer, Label, Accessories, Footwear, Workwear, Backpacks, Belt, bags, Shoulder bags, Caps, gentlemen, Socks, Belts, Socks, glasses, gloves, stickers, wallets, Winter hats, scarves, hats, Scarves, gloves, Outerwear, Polos, T-shirts, Body,Underwear, Hoodies, sweatshirts, sweaters, Jackets, Shirts, Sweatshirt, hoodies, Pants, Tracksuits, Tops, dresses, skirts, suits, Shorts, summer sets, swimwear, sneakers, Sneakers, Winter shoes\"\n      />\n      <ReadyStylesCatalog />\n    </>\n  );\n};\n\nexport default ReadyStyles;\n"],"names":["perPage","ReadyStylesCatalog","searchParams","setSearchParams","useSearchParams","filterState","setFilterState","useState","products","setProducts","isLoading","setIsLoading","error","setError","totalPage","setTotalPage","page","setPages","getFromStorage","selectedLanguage","selectedCurrency","useContext","StatusContext","initialState","man_woman","category","maxPrice","minPrice","product","sizes","currency","selectedFilter","setSelectedFilter","filters","setFilters","search","setSearch","sort","setSort","t","useTranslation","setPage","toPage","set","saveToStorage","handleActiveLabel","key","selectedFilters","forEach","item","checkboxes","document","querySelectorAll","concat","checkbox","classList","add","useEffect","checkFilter","param","getAll","undefined","get","setParams","async","data","fetchData","onFetchError","Math","ceil","total","getSelectedFilter","getData","showSort","setShowSort","showFilter","setShowFilter","LS","params","Object","fromEntries","console","log","size","_jsxs","SC","children","_jsx","$primary","onClick","toggleSort","state","type","Open","CatalogSort","toggleFilter","CatalogFilter","Close","delete","map","filter","i","e","deletedFilter","currentTarget","dataset","newFilters","LSentries","entries","value","arr","length","Array","isArray","index","findIndex","splice","prevState","remove","removeSelectedFilter","handleClick","onLoading","onLoaded","CatalogList","Pagination","changePage","_Fragment","Headline","style","textAlign","Benefits","ReadyStyles","location","useLocation","dispatch","useDispatch","window","scrollTo","top","left","behavior","cleanHeaderBottom","SEO","title","description_ua","keywords_ua","description","keywords"],"sourceRoot":""}